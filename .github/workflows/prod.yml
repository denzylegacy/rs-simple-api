name: Build, Teste and Deploy to Prod

on:
  push:
    branches:
      - master

env:
  SQLX_OFFLINE: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          override-path: rust-toolchain

      - name: Build the project
        run: cargo build --verbose --release
          cargo test --verbose --release

      - name: Build Docker image
        uses: docker/build-push-action@v2

      - name: Push Docker image
        uses: docker/build-push-action@v2v
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Copy Docker Compose file
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" scp -o StrictHostKeyChecking=no docker-compose.yml ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_IP }}:~

      - name: Deploy to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd ~
            export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            docker-compose down
            docker-compose pull
            docker-compose up -d
